
on:
  push:
    tags:
      - 'r-hello-service-v*'
  release:
    types: [created]     
name: hello-service-tag ci      
jobs:
  hello-service:
    if: github.ref == 'ref/head/r-hello-service-v*'
    runs-on: ubuntu-latest
    env:
      REPO: test-go
      SERVICE_NAME: hello-service
      GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}   
    steps:
      - name: Get tag
        id: gtag
        uses: dawidd6/action-get-tag@v1
      - name: Clone the tag
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.gtag.outputs.tag }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2
      - name: Image tag
        id: tag
        run: echo "::set-output name=tag::$(date +'%F')-$(git rev-parse --short HEAD)"
      - name: Build image
        id: build
        env: 
          BRANCH: ${{ steps.prcomm.outputs.BRANCH_NAME }}
          COMMIT: ${{ steps.prcomm.outputs.SHA }}
          ECR: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{steps.tag.outputs.tag}}
        run: |
          # Build and tag a docker image
          docker build --no-cache --build-arg GITHUB_TOKEN  --build-arg REPO=${REPO} --build-arg BRANCH=${BRANCH} --build-arg COMMIT=${COMMIT} -t $ECR/$SERVICE_NAME:latest \
                                                -t $ECR/$SERVICE_NAME:$TAG hello_service/.
          echo "::set-output name=tag::$(date +'%F')-$(git rev-parse --short HEAD)"
          echo "::set-output name=image::$ECR/$SERVICE_NAME" 
      - name: Push image
        id: push
        run: |
          # push docker image to ECR
          docker push ${{ steps.build.outputs.image }}:${{steps.tag.outputs.tag}}
          docker push ${{ steps.build.outputs.image }}:latest
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.CI_TOKEN }} 
          event-type: hello-service
          client-payload: '{"tag": "${{steps.tag.outputs.tag}}"}'