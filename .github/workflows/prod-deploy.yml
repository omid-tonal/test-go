name: deploy-to-prod
on: 
  workflow_dispatch:
    inputs:
      service:
        description: 'Service Name'     
        required: true
jobs:   
  Branch:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          token: ${{ secrets.CI_TOKEN }}    
    - name: QA Deployment Image
      id: qa-image
      uses: Consensys/kubernetes-action@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
      with:
        args: get -n tools applications.argoproj.io qa-${{ github.event.inputs.service }}-service -o jsonpath="{..images}"
    - name: Prod Deployment Image
      id: prod-image
      uses: Consensys/kubernetes-action@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
      with:
        args: get -n tools applications.argoproj.io prod-${{ github.event.inputs.service }}-service -o jsonpath="{..images}"        
    - name: Create Variables
      if: ${{ steps.qa-image.outputs.result != steps.prod-image.outputs.result }}
      id: var
      run: |
        SHA=$(echo ${{ steps.qa-image.outputs.result }} | tr -d ] | cut -d "-" -f7)
        TAG=$(echo ${{ steps.qa-image.outputs.result }} | tr -d ] | cut -d ":" -f2)
        BRANCH=qa/${{ github.event.inputs.service }}-$SHA
        SDIR=$(echo "${{ github.event.inputs.service }}" | tr - _)_service
        echo "::set-output name=sha::$SHA"
        echo "::set-output name=tag::$TAG"
        echo "::set-output name=branch::$BRANCH"
        echo "::set-output name=dir::$SDIR"            
    - name: Create Branch
      id: branch
      run: |
        git checkout -b ${{ steps.var.outputs.branch }} ${{ steps.var.outputs.sha }}
        git push --set-upstream origin ${{ steps.var.outputs.branch }}
        git checkout prod/${{ steps.var.outputs.dir }}

    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.CI_TOKEN }}
        commit-message: ${{ github.event.inputs.service }} to prod 
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        signoff: false
        branch: ${{ steps.var.outputs.branch }}
        delete-branch: true
        title: '${{ github.event.inputs.service }} to prod'
        labels: |
          api
          automated pr
        team-reviewers: |
          owners
          maintainers
        milestone: 1
        draft: false
    - name: Check outputs
      run: |
        echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
        echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
    - name: Promote Prod
      working-directory: ${{ steps.var.outputs.dir }} 
      run: |
        git pull origin master --rebase
        git checkout ${{ steps.var.outputs.branch }}
        sed -i 's/tag.*/tag: ${{ steps.var.outputs.tag }}/g' k8s/values.yaml
        git add k8s/values.yaml
        git status
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "promote ${{ github.event.inputs.service }}-service image to prod"
        git push --set-upstream origin ${{ steps.var.outputs.branch }}