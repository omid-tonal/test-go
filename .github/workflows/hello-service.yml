on:
  push:
    # branches:
    #   - prod/hello-service
    paths:
      - hello_service/**  

name: Push hello-service image to ECR

jobs:
  deploy:
    name: Push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%F')"

    - name: Get short commit
      id: commit
      run: echo "::set-output name=short::$(git rev-parse --short HEAD)"

    - name: Get branch
      id: branch
      run: echo "::set-output name=branch::$(git branch --contains ${{steps.commit.outputs.short}})"
      
    - name: Build image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: hello-service
        TAG: ${{steps.date.outputs.date}}-${{steps.commit.outputs.short}}
        LATEST_TAG: latest
        GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
        REPO: test-go
        BRANCH: ${{steps.branch.outputs.branch}}
        COMMIT: ${{steps.commit.outputs.short}}
      run: |
        # Build and tag a docker image

        docker build --no-cache --build-arg GITHUB_TOKEN --build-arg REPO=${REPO} --build-arg BRANCH=${BRANCH} --build-arg COMMIT=${COMMIT} -t $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG \
                                              -t $ECR_REGISTRY/$ECR_REPOSITORY:$TAG hello_service/.
        echo "::set-output name=tag::$ECR_REGISTRY/$ECR_REPOSITORY:$TAG"
        echo "::set-output name=latest-tag::$ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG"
    - name: Scan image
      id: scan-image
      uses: anchore/scan-action@master
      with:
        image-reference: ${{ steps.build-image.outputs.tag }}
        fail-build: true
    - name: Push image
      id: push-image        
      run: |
        # push docker image to ECR
        docker push ${{ steps.build-image.outputs.tag }}
        docker push ${{ steps.build-image.outputs.latest-tag }}
        echo "::set-output name=image::${{ steps.build-image.outputs.tag }}"
        