on:
  push:
    paths:
      - hello_service/*.go 
          
name: Hello-Service CI 

jobs:
  build:
    name: Docker
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%F')"

    - name: Get short commit
      id: commit
      run: echo "::set-output name=short::$(git rev-parse --short HEAD)"

    - name: Get branch name
      id: branch
      run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"

    - name: Build image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        SERVICE_NAME: hello-service
        TAG: ${{steps.date.outputs.date}}-${{steps.commit.outputs.short}}
        LATEST_TAG: latest
        GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
        REPO: test-go
        BRANCH: ${{steps.branch.outputs.branch}}
        COMMIT: ${{steps.commit.outputs.short}}
      run: |
        # Build and tag a docker image

        docker build --no-cache --build-arg GITHUB_TOKEN --build-arg REPO=${REPO} --build-arg BRANCH=${BRANCH} --build-arg COMMIT=${COMMIT} -t $ECR_REGISTRY/$SERVICE_NAME:$LATEST_TAG \
                                              -t $ECR_REGISTRY/$SERVICE_NAME:$TAG hello_service/.
        echo "::set-output name=image::$ECR_REGISTRY/$SERVICE_NAME:$TAG"
        echo "::set-output name=tag::$TAG"
        echo "::set-output name=latest-tag::$ECR_REGISTRY/$SERVICE_NAME:$LATEST_TAG"
    # - name: Scan image
    #   id: scan-image
    #   uses: anchore/scan-action@master
    #   with:
    #     image-reference: ${{ steps.build-image.outputs.image }}
    #     fail-build: true
    - name: Push image
      id: push-image 
      env:
        AWS: 925863516128
        SERVICE_NAME: hello-service       
      run: |
        # push docker image to ECR
        docker push ${{ steps.build-image.outputs.image }}
        docker push ${{ steps.build-image.outputs.latest-tag }}
        echo "kubectl set image deployment/dev-$SERVICE_NAME dev-$SERVICE_NAME=$AWS.dkr.ecr.us-west-2.amazonaws.com/$SERVICE_NAME:${{ steps.build-image.outputs.tag }} -n dev"
        echo "kubectl set image deployment/qa-$SERVICE_NAME qa-$SERVICE_NAME=$AWS.dkr.ecr.us-west-2.amazonaws.com/$SERVICE_NAME:${{ steps.build-image.outputs.tag }} -n qa"
        echo "kubectl set image deployment/prod-$SERVICE_NAME prod-$SERVICE_NAME=$AWS.dkr.ecr.us-west-2.amazonaws.com/$SERVICE_NAME:${{ steps.build-image.outputs.tag }} -n prod"
        echo ""
        echo "Docker image tag for $SERVICE_NAME: ${{ steps.build-image.outputs.tag }}"
    # - name: change the tag
    #   run: |
    #     #change the tag to the new one on values.yaml
    #     sed -i 's/tag.*/tag:${{ steps.build-image.outputs.latest-tag }}/g' ../hello_service/k8s-hello-service/values.yaml
    # - name: check for changes
    #   run: git status
    # - name: stage changed files
    #   run: git add hello_service/k8s-hello-service/.
    # - name: commit changed files
    #   run: git commit -m "Auto updating tag on values.yaml"
    # - name: fetch from master
    #   run: git fetch origin master
    # - name: push code to master
    #   run: git push origin HEAD:master  