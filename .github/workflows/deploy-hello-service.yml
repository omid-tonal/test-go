name: CI/CD
on: [issue_comment]

jobs:
  hello-service:
    runs-on: ubuntu-latest
    env:
      REPO: test-go
      SERVICE_NAME: hello-service
      GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}   
    steps:
      - name: listen for PR Comments
        uses: machine-learning-apps/actions-chatops@master
        with:
          TRIGGER_PHRASE: "/deploy-hello-service"
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }} 
        id: prcomm
        # This step clones the branch of the PR associated with the triggering phrase, but only if it is triggered.
      - name: clone branch of PR
        if: steps.prcomm.outputs.BOOL_TRIGGERED == 'true'
        uses: actions/checkout@master
        with:
          ref: ${{ steps.prcomm.outputs.SHA }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2
      - name: Build image
        id: build
        run: |
          # Build and tag a docker image
          docker build --no-cache --build-arg ${{ secrets.CI_TOKEN }}  --build-arg REPO=${REPO} --build-arg BRANCH=${{ steps.prcomm.outputs.BRANCH_NAME }} --build-arg COMMIT=${{ steps.prcomm.outputs.SHA }} -t ${{ steps.login-ecr.outputs.ecr }}/$SERVICE_NAME:latest \
                                                -t ${{ steps.login-ecr.outputs.registry }}/$SERVICE_NAME:$(date +'%F')-$(git rev-parse --short HEAD) hello_service/.
          
          echo "::set-output name=tag::$(date +'%F')-$(git rev-parse --short HEAD)"
          echo "::set-output name=image::$ECR_REGISTRY/$SERVICE_NAME" 
      - name: Push image
        id: push     
        run: |
          # push docker image to ECR
          docker push ${{ steps.build.outputs.image }}:${{ steps.build.outputs.tag }}
          docker push ${{ steps.build.outputs.image }}:latest
      - name: Change the image tag
        run: |
          #change the tag to the new one on values.yaml
          sed -i 's/tag.*/tag: ${{ steps.build.outputs.tag }}/g' hello_service/k8s-hello-service/values.yaml
      - name: Check for changes
        run: git status
      - name: Commit changed files

        run: |
          git add hello_service/k8s-hello-service/.
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Auto updating image tag:${{ steps.build.outputs.tag }}"
      - name: Push changes
        if: github.ref == 'refs/heads/master'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.CI_TOKEN }}